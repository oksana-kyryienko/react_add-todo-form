{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","prevTodos","setPrevTodos","setTitle","setUserId","isTitleCorrect","setIsTitleCorrect","isUserIdCorrect","setIsUserIdCorrect","action","method","onSubmit","event","preventDefault","length","Math","max","type","placeholder","value","onChange","target","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb39ccef.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`malito${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': completed === true,\n      },\n    )}\n    >\n      <h2 className=\"TodoInfo__title\">{ title }</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [prevTodos, setPrevTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [completed] = useState(false);\n  const [isTitleCorrect, setIsTitleCorrect] = useState(false);\n  const [isUserIdCorrect, setIsUserIdCorrect] = useState(false);\n\n  const getTodo = () => {\n    return (\n      {\n        id: Math.max(0, ...prevTodos.map(({ id }) => id + 1)),\n        title,\n        userId,\n        completed,\n        user: getUser(userId) || null,\n      }\n    );\n  };\n\n  const handleChange = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setIsTitleCorrect(true);\n    }\n\n    if (userId === 0) {\n      setIsUserIdCorrect(true);\n    }\n\n    if (userId === 0 || title.length === 0) {\n      return;\n    }\n\n    setTitle('');\n    setUserId(0);\n    setPrevTodos([...prevTodos, getTodo()]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleChange}\n      >\n        <div className=\"field\">\n          <span>{'Title: '}</span>\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setIsTitleCorrect(false);\n            }}\n          />\n          {isTitleCorrect\n          && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <span>{'User: '}</span>\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(Number(event.target.value));\n              setIsUserIdCorrect(false);\n            }}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserIdCorrect\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={prevTodos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}